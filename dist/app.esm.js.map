{"version":3,"file":"app.esm.js","sources":["../src/model/Encounter.js","../src/model/encounter_elements/EncounterElement.js","../src/model/encounter_elements/StatusEffect.js","../src/model/content_blocks/ContentBlock.js"],"sourcesContent":["/**\n * Represents an encounter\n * @author Ferdinand Engl√§nder\n */\n\nclass Encounter {\n    /**\n     * @type {string} Name of the encounter.\n     */\n    name;\n\n    /**\n     * @type {ContentBlock[]} Global content blocks associated with the encounter.\n     */\n    globalContentBlocks;\n\n    /**\n     * @type {EncounterElement[]} Array of encounter elements (e.g., creatures, PCs, NPCs, lair actions).\n     */\n    encounterElements;\n\n    /**\n     * @type {string[]} Initiative order resolved from initiative values and tie-breakers.\n     */\n    _initiativeOrder;\n\n    /**\n     * @type {Object.<string, number>} Rolled initiative values mapped to the IDs of encounter elements.\n     */\n    initiativeValues;\n\n    /**\n     * @type {Object.<number, string[]>} Tie-breakers for initiative values, mapping tied values to arrays of element IDs.\n     */\n    initiativeTieBreakers;\n\n    /**\n     * @type {number} Current round of the encounter.\n     */\n    currentRound;\n\n    /**\n     * @type {number} Index of the currently active encounter element in the initiative order.\n     */\n    currentTurn;\n\n    /**\n     * @param {Object} options Options for initializing the encounter.\n     * @param {string} options.name Name of the encounter.\n     * @param {string} options.id\n     * @param {ContentBlock[]} options.globalContentBlocks Global content blocks associated with the encounter.\n     * @param {EncounterElement[]} options.encounterElements Array of encounter elements (e.g., creatures, NPCs).\n     * @param {Object.<string, number>} [options.initiativeValues] Rolled initiative values mapped to the IDs of encounter elements.\n     * @param {Object.<number, string[]>} [options.initiativeTieBreakers] Tie-breakers for initiative values.\n     * @param {number} [options.currentRound=1] Current round of the encounter.\n     * @param {number} [options.currentTurn=0] Index of the currently active encounter element in the initiative order.\n     */\n    constructor({\n                    name,\n                    id = \"\",\n                    globalContentBlocks = [],\n                    encounterElements,\n                    initiativeValues = {},\n                    initiativeTieBreakers = {},\n                    currentRound = 1,\n                    currentTurn = 0,\n                    activeStatusEffects = {}\n                }) {\n        this.name = name;\n        this.globalContentBlocks = globalContentBlocks;\n        this.encounterElements = encounterElements;\n        this._initiativeOrder = [];\n        this.initiativeValues = initiativeValues;\n        this.initiativeTieBreakers = initiativeTieBreakers;\n        this.currentRound = currentRound;\n        this.currentTurn = currentTurn;\n    }\n\n    /**\n     *\n     * @param {} initiativeOrder\n     */\n    set initiativeOrder(initiativeOrder) {\n        this._initiativeOrder = initiativeOrder;\n    }\n\n\n    /**\n     * Gets the encounter objects in initiative order.\n     * @returns {EncounterElement[]} Array of encounter objects in initiative order.\n     */\n    getInitiativeObjects() {\n        return this._initiativeOrder.map((id) => {\n            const element = this.encounterElements.find((el) => el.id === id);\n            if (!element) {\n                throw new Error(`EncounterElement with ID \"${id}\" not found`);\n            }\n            return element;\n        });\n    }\n}\n\nexport default Encounter;","class EncounterElement {\n    /**\n     *\n     * @param {string} name\n     * @param {string} id\n     * @param {string} type\n     */\n    constructor({\n        name,\n        id = \"\",\n        type,\n                }) {\n        this.name = name;\n        this.id = id;\n        this.type = type;\n    }\n}\n\nexport default EncounterElement;","class StatusEffect {\n    /**\n     * @type {string}\n     */\n    name;\n\n    /**\n     * @type {string}\n     */\n    description;\n\n    /**\n     * @type {string}\n     */\n    effectedParticipantId;\n\n    /**\n     * @type {string}\n     */\n    causingParticipantId;\n\n    /**\n     * @type {number}\n     */\n    maxDuration;\n\n    /**\n     * @type {number}\n     */\n    roundsPassed;\n\n    /**\n     *\n     * @param {string} name\n     * @param {string} description\n     * @param {string} effectedParticipantId\n     * @param {string | null} causingParticipantId\n     * @param {number} maxDuration\n     * @param {number} roundsPassed\n     */\n    constructor({\n        name,\n        description = \"\",\n        effectedParticipantId,\n        causingParticipantId = null,\n        maxDuration = 0,\n        roundsPassed = 0,\n                }) {\n        this.name = name;\n        this.description = description;\n        this.effectedParticipantId = effectedParticipantId;\n        this.causingParticipantId = causingParticipantId;\n        this.maxDuration = maxDuration;\n        this.roundsPassed = roundsPassed;\n    }\n}\n\nexport default StatusEffect;","class ContentBlock {\n    constructor({\n        name,\n        type,\n                }) {\n    }\n}\n\nexport default ContentBlock;"],"names":[],"mappings":"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"}